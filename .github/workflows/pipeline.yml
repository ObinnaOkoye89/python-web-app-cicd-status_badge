name: Pipeline

on: [push]

env:
  APPLICATION_NAME: app2
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install requirements
        run: pip install --quiet --requirement requirements.txt
      - name: Lint code
        run: |
          flake8 --ignore=E501,E231 *.py
          pylint --disable=C0301 --disable=C0326 *.py
      - name: Run unit tests
        run: |
          python -m unittest --verbose --failfast

  build_image:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
      
      - name: Set up GCloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure GCloud
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/region ${{ secrets.GCP_REGION }}
          gcloud auth configure-docker gcr.io
          gcloud info
  
      - name: Build and tag image
        run: docker build -t "gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest" .
  
      - name: Push to GCP image registry
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest

  test_image:
    needs: [build_image]
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
          
      - name: Set up GCloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure GCloud
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/region ${{ secrets.GCP_REGION }}
          gcloud auth configure-docker gcr.io
          gcloud info

      - name: Run unit tests in container
        run: docker run --rm "gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}" -m unittest discover -v --failfast

  deploy:
    needs: [test_image]
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
          
      - name: Set up GCloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure GCloud
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/region ${{ secrets.GCP_REGION }}
          gcloud auth configure-docker
          gcloud info
        
      - name: Deploy to Cloud Run
        run: gcloud run deploy ${{ env.APPLICATION_NAME }} \
          --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest \
          --platform=managed \
          --allow-unauthenticated \
          --region=us-central1
  
      - name: Test deployment
        run: |
          DEPLOY_URL=$(gcloud run services describe ${{ env.APPLICATION_NAME }} --platform=managed --region=us-central1 --format="value(status.url)")
          curl -sL --max-time 300 -o /dev/null -w "%{http_code}" $DEPLOY_URL | grep 200 || exit 1
